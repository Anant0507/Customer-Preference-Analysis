#     # ggplot(table(df_2),aes(x=i,)) +
#     #   geom_bar() +
#     #   coord
#     barplot(table(df[[i]]),xlab=i,main = paste("Distribution of ",i))
#   }
#   else{
#     # qqnorm(df[[i]],xlab = i, main = paste("Distribution of",i))
#     # qqline(df[[i]],col="red")
#     hist(df[[i]],xlab = i, main = paste("Distribution of",i))
#
#   }
# }
# Binning the age in to two categories
df_2$Age.bin <- ifelse(df_2$Age <= 25,"Under 25","Above 25")
# Factorizing the column
df_2$Age.bin <- factor(df_2$Age.bin)
#| message: false
#| warning: false
#| label: fig-frequency-of-purchase-by-age-group
#| fig-cap: "Plots showing the frequency purchase in different age group"
#| fig-subcap:
#|   - "Frequency of purchase for Age <= 25"
#|   - "Frequency of purchase for Age > 25"
#| layout-ncol: 2
#| fig-align: center
# 1. Age
# 1.1 Frequency of Purchase
# Plot to display the count of Customer under 25 and their Frequency of Purchase
data.frame(table(df_2[df_2$Age.bin == "Under 25", "Frequency.of.Purchases"])) %>%
mutate(name = fct_reorder(Var1, desc(Freq))) %>%
ggplot(aes(x = name, y = Freq)) +
geom_bar(stat = "identity") +
labs( x = "Frequency of Purchases", y = "Count",) +
coord_flip()
# Plot to display the count of Customer above 25 and their Frequency of Purchase
data.frame(table(df_2[df_2$Age.bin == "Above 25", "Frequency.of.Purchases"])) %>%
mutate(name = fct_reorder(Var1, desc(Freq))) %>%
ggplot(aes(x = name, y = Freq)) +
geom_bar(stat = "identity") +
labs(x = "Frequency of Purchases", y = "Count") +
coord_flip()
# Chi square test of independence
chisq.test(table(df_2$Age.bin,df_2$Frequency.of.Purchases))
# There are not much significance between relation of Age and Frequency of Purchase
# 1.2 Promo codes
age_promo_table <- data.frame(table(df_2$Age.bin,df_2$Promo.Code.Used))
colnames(age_promo_table) <- c("Age.bin", "Promo.Code.Used", "Count")
age_promo_table %>%
ggplot(aes(x = Age.bin, y = Promo.Code.Used, fill = Count)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
labs(title = "Heatmap for Age group and Promo code used",
x = "Age group", y = " Promo Code Used", fill = "Count") +
theme_minimal() +
geom_text(aes(label = Count), color = "white", size = 6)
age_promo_code <- table(df_2$Age.bin, df_2$Promo.Code.Used)
chisq.test(age_promo_code)
# 1.3 Review Rating
df_2 %>%
ggplot(aes(x=Age.bin, y = Review.Rating, fill = Age.bin)) +
geom_boxplot()
# T test
Age.grouping <- group_by(df_2,Age.bin)
# Assumptions checking
# Outlier checking
identify_outliers(Age.grouping, Review.Rating)
# Normality checking
for (i in unique(df_2$Age.bin)){
# print(i)
qqnorm(df_2[df_2$Age.bin == i,"Review.Rating"])
qqline(df_2[df_2$Age.bin == i,"Review.Rating"],col = "red")
plot(density(df_2[df_2$Age.bin == i,"Review.Rating"]))
boxplot(df_2[df_2$Age.bin == i,"Review.Rating"])
}
shapiro_test(Age.grouping, Review.Rating)
# Homogeniety of variance
levene_test(df_2, Review.Rating ~ Age.bin)
t_test(Review.Rating ~ Age.bin, data = df_2)
cohens_d(df_2,Review.Rating ~ Age.bin, var.equal = FALSE)
# p-value < 0.05, there is an effect but small one
# 1.4 Category
age_category_table <- data.frame(table(df_2$Age.bin,df_2$Category))
colnames(age_category_table) <- c("Age.bin", Preferred.Payment.Method, "Count")
# Get U.S. state map data
us_states <- map("state", plot = FALSE, fill = TRUE)
# Match sales data to map regions
state_match <- match(us_states$names, sales_data$state)
# Plot the USA map with states
map("state", fill = TRUE, col = "lightblue", bg = "white", lwd = 0.5)
# Highlight specific states (e.g., California and Texas)
map("state", regions = c("california", "texas"), fill = TRUE, col = "darkblue", add = TRUE)
# Load required libraries
install.packages("maps")
library(maps)
# Get U.S. state map data
us_states <- map("state", plot = FALSE, fill = TRUE)
# Match sales data to map regions
state_match <- match(us_states$names, sales_data$state)
install.packages("maps")
# Get U.S. state map data
us_states <- map("state", plot = FALSE, fill = TRUE)
# Match sales data to map regions
state_match <- match(us_states$names, sales_data$state)
# Example sales data for U.S. states
sales_data <- data.frame(
state = tolower(state.name),  # Convert state names to lowercase for compatibility with maps
total_sales = runif(50, min = 1000, max = 10000)  # Random sales data
)
# Get U.S. state map data
us_states <- map("state", plot = FALSE, fill = TRUE)
# Match sales data to map regions
state_match <- match(us_states$names, sales_data$state)
us_states$values <- sales_data$total_sales[state_match]  # Add sales data to map
# Plot the heatmap
palette <- colorRampPalette(c("lightblue", "darkblue"))  # Color gradient
colors <- palette(100)[as.numeric(cut(us_states$values, breaks = 100))]  # Map sales to colors
map("state", fill = TRUE, col = colors, lwd = 0.5, bg = "white")
# Add a legend
legend("bottomleft",
legend = c("Low Sales", "High Sales"),
fill = palette(2),
title = "Total Sales")
data <- data.frame(
id=seq(1,60),
individual=paste( "Mister ", seq(1,60), sep=""),
value=sample( seq(10,100), 60, replace=T)
)
View(data)
p <- ggplot(data, aes(x=as.factor(id), y=value)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("blue", 0.3)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-100,120) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p
group_by(df_2, Location) %>% summarise(Purchase.Amount..USD.)
group_by(df_2, Location)
group_by(df_2, Location) %>% summarise(total_sales = sum(Purchase.Amount..USD.))
sales_location
# Sales by location
sales_location <- group_by(df_2, Location) %>% summarise(total_sales = sum(Purchase.Amount..USD.))
sales_location
# Sales by location
sales_location <- group_by(df_2, Location) %>% summarise(total_sales = sum(Purchase.Amount..USD.))
sales_location %>%
ggplot(aes(x=Location, y = total_sales)) +
geom_bar() +
ylim(-100,6000) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")
) +
coord_polar(start = 0)
# Sales by location
sales_location <- group_by(df_2, Location) %>% summarise(total_sales = sum(Purchase.Amount..USD.))
sales_location %>%
ggplot(aes(x=Location, y = total_sales)) +
geom_bar(stat = "identity") +
ylim(-100,6000) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")
) +
coord_polar(start = 0)
# Sales by location
sales_location <- group_by(df_2, Location) %>% summarise(total_sales = sum(Purchase.Amount..USD.))
sales_location %>%
ggplot(aes(x=Location, y = total_sales)) +
geom_bar(stat = "identity") +
ylim(200,6000) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")
) +
coord_polar(start = 0)
# Sales by location
sales_location <- group_by(df_2, Location) %>% summarise(total_sales = sum(Purchase.Amount..USD.))
sales_location %>%
ggplot(aes(x=Location, y = total_sales)) +
geom_bar(stat = "identity") +
ylim(-10,6000) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")
) +
coord_polar(start = 0)
# Sales by location
sales_location <- group_by(df_2, Location) %>% summarise(total_sales = sum(Purchase.Amount..USD.))
sales_location %>%
ggplot(aes(x=Location, y = total_sales)) +
geom_bar(stat = "identity") +
ylim(-1000,6000) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")
) +
coord_polar(start = 0)
# Sales by location
sales_location <- group_by(df_2, Location) %>% summarise(total_sales = sum(Purchase.Amount..USD.))
sales_location %>%
ggplot(aes(x=Location, y = total_sales)) +
geom_bar(stat = "identity") +
ylim(-2000,6000) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")
) +
coord_polar(start = 0)
# Sales by location
sales_location <- group_by(df_2, Location) %>% summarise(total_sales = sum(Purchase.Amount..USD.))
sales_location %>%
ggplot(aes(x=Location, y = total_sales)) +
geom_bar(stat = "identity") +
coord_flip()
names(df_2)
#| message: false
#| warning: false
#| label: fig-frequency-of-purchase-by-gender-group
#| fig-cap: "Plots showing the frequency purchase by gender group"
#| fig-subcap:
#|   - "Frequency of purchase for Male customers"
#|   - "Frequency of purchase for Female customers"
#| layout-ncol: 2
#| fig-align: center
# 1. Gender
# 1.1 Frequency of Purchase
# Plot to display the count of Male customers and their Frequency of Purchase
data.frame(table(df_2[df_2$Gender == "Male", "Frequency.of.Purchases"])) %>%
mutate(name = fct_reorder(Var1, desc(Freq))) %>%
ggplot(aes(x = name, y = Freq)) +
geom_bar(stat = "identity") +
labs(x = "Frequency of Purchases", y = "Count") +
coord_flip()
# Plot to display the count of Female customers and their Frequency of Purchase
data.frame(table(df_2[df_2$Gender == "Female", "Frequency.of.Purchases"])) %>%
mutate(name = fct_reorder(Var1, desc(Freq))) %>%
ggplot(aes(x = name, y = Freq)) +
geom_bar(stat = "identity") +
labs(x = "Frequency of Purchases", y = "Count") +
coord_flip()
# Chi square test of independence
chisq.test(table(df_2$Gender, df_2$Frequency.of.Purchases))
# 1.2 Promo Codes
gender_promo_table <- data.frame(table(df_2$Gender, df_2$Promo.Code.Used))
colnames(gender_promo_table) <- c("Gender", "Promo.Code.Used", "Count")
gender_promo_table %>%
ggplot(aes(x = Gender, y = Promo.Code.Used, fill = Count)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
labs(title = "Heatmap for Gender and Promo Code Used",
x = "Gender", y = "Promo Code Used", fill = "Count") +
theme_minimal() +
geom_text(aes(label = Count), color = "white", size = 6)
gender_promo_code <- table(df_2$Gender, df_2$Promo.Code.Used)
chisq.test(gender_promo_code)
chisq.posthoc.test::chisq.posthoc.test(gender_promo_code)
# 1.2 Promo Codes
gender_promo_table <- data.frame(table(df_2$Gender, df_2$Promo.Code.Used))
colnames(gender_promo_table) <- c("Gender", "Promo.Code.Used", "Count")
gender_promo_table %>%
ggplot(aes(x = Gender, y = Promo.Code.Used, fill = Count)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
labs(title = "Heatmap for Gender and Promo Code Used",
x = "Gender", y = "Promo Code Used", fill = "Count") +
theme_minimal() +
geom_text(aes(label = Count), color = "white", size = 6)
gender_promo_code <- table(df_2$Gender, df_2$Promo.Code.Used)
chisq.test(gender_promo_code)
chisq.posthoc.test::chisq.posthoc.test(gender_promo_code)
# gender have influence on promo code with Male being
dim(df_2)
# 1.3 Review Rating
df_2 %>%
ggplot(aes(x = Gender, y = Review.Rating, fill = Gender)) +
geom_boxplot()
# T test
Gender.grouping <- group_by(df_2, Gender)
# Assumptions checking
# Outlier checking
identify_outliers(Gender.grouping, Review.Rating)
# Normality checking
for (i in unique(df_2$Gender)){
qqnorm(df_2[df_2$Gender == i, "Review.Rating"])
qqline(df_2[df_2$Gender == i, "Review.Rating"], col = "red")
plot(density(df_2[df_2$Gender == i, "Review.Rating"]))
boxplot(df_2[df_2$Gender == i, "Review.Rating"])
}
shapiro_test(Gender.grouping, Review.Rating)
# Homogeneity of variance
levene_test(df_2, Review.Rating ~ Gender)
t_test(Review.Rating ~ Gender, data = df_2)
cohens_d(df_2, Review.Rating ~ Gender, var.equal = FALSE)
# p-value < 0.05, indicating there is an effect
shapiro_test(Gender.grouping, Review.Rating)
levene_test(df_2, Review.Rating ~ Gender)
t_test(Review.Rating ~ Gender, data = df_2)
cohens_d(df_2, Review.Rating ~ Gender, var.equal = FALSE)
# 1.4 Category
gender_category_table <- data.frame(table(df_2$Gender, df_2$Category))
colnames(gender_category_table) <- c("Gender", "Category", "Count")
gender_category_table %>%
ggplot(aes(x = Gender, y = Category, fill = Count)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
labs(title = "Heatmap for Gender and Category",
x = "Gender", y = "Category", fill = "Count") +
theme_minimal() +
geom_text(aes(label = Count), color = "white", size = 6)
gender_category_code <- table(df_2$Gender, df_2$Category)
chisq.test(gender_category_code)
chisq.test(gender_category_code)
# 1.5 Preferred Purchase Method
gender_preferred_purchase_method_table <- data.frame(table(df_2$Gender, df_2$Preferred.Payment.Method))
colnames(gender_preferred_purchase_method_table) <- c("Gender", "Preferred.Payment.Method", "Count")
gender_preferred_purchase_method_table %>%
ggplot(aes(x = Gender, y = Preferred.Payment.Method, fill = Count)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE) +
labs(title = "Heatmap for Gender and Preferred Purchase Method",
x = "Gender", y = "Preferred Purchase Method", fill = "Count") +
theme_minimal() +
geom_text(aes(label = Count), color = "white", size = 6)
gender_preferred_payment_method_code <- table(df_2$Gender, df_2$Preferred.Payment.Method)
chisq.test(gender_preferred_payment_method_code)
unique(df_2$Color)
unique(df_2$Size)
# 2.6 Color
unique(df_2$Item.Purchased)
unique(df_2$Shipping.Type)
shipping_table <- table(df_2$Gender,df_2$Shipping.Type)
chisq.test(shipping_table)
#| results: false
#| warning: false
library(dplyr)
library(ggplot2)
library(forcats)
library(gt)
library(gtExtras)
library(rstatix)
library(hrbrthemes)
library(viridis)
library(maps)
library(chisq.posthoc.test)
chisq.posthoc.test(shipping_table)
chisq.test(shipping_table)
chisq.posthoc.test(shipping_table)
data.frame(table(df_2$Gender, df_2$Shipping.Type))
colnames(gender_shipping) <- c("Gender","Shipping_Type","Count")
gender_shipping <- data.frame(table(df_2$Gender, df_2$Shipping.Type))
colnames(gender_shipping) <- c("Gender","Shipping_Type","Count")
gender_shipping %>%
ggplot(aes(fill = Gender, y = Count, x = Shipping_Type))
gender_shipping %>%
ggplot(aes(fill = Gender, y = Count, x = Shipping_Type)) +
geom_bar()
gender_shipping %>%
ggplot(aes(fill = Gender, y = Count, x = Shipping_Type)) +
geom_bar(position = "dodge", stat = "identity")
?geom_bar
gender_shipping %>%
ggplot(aes(fill = Gender, y = Count, x = Shipping_Type)) +
geom_bar(position = "stack", stat = "identity")
chisq.test(shipping_table)
# 2.6 Shipping Type
gender_shipping <- data.frame(table(df_2$Gender, df_2$Shipping.Type))
colnames(gender_shipping) <- c("Gender","Shipping_Type","Count")
gender_shipping %>%
ggplot(aes(fill = Gender, y = Count, x = Shipping_Type)) +
geom_bar(position = "dodge", stat = "identity")
shipping_table <- table(df_2$Gender,df_2$Shipping.Type)
chisq.test(shipping_table)
chisq.posthoc.test(shipping_table)
# Free shipping is preferred by Females more than males
# 2.5 Preferred Purchase Method
gender_preferred_purchase_method_table <- data.frame(table(df_2$Gender, df_2$Preferred.Payment.Method))
colnames(gender_preferred_purchase_method_table) <- c("Gender", "Preferred.Payment.Method", "Count")
gender_preferred_purchase_method_table %>%
ggplot(aes(x = Gender, y = Preferred.Payment.Method, fill = Count)) +
geom_tile() +
# scale_fill_viridis(discrete = FALSE) +
labs(title = "Heatmap for Gender and Preferred Purchase Method",
x = "Gender", y = "Preferred Purchase Method", fill = "Count") +
theme_minimal() +
geom_text(aes(label = Count), color = "white", size = 6)
gender_preferred_payment_method_code <- table(df_2$Gender, df_2$Preferred.Payment.Method)
chisq.test(gender_preferred_payment_method_code)
# 2.6 Shipping Type by Age
age_shipping <- data.frame(table(df_2$Age, df_2$Shipping.Type))
colnames(age_shipping) <- c("Age", "Shipping_Type", "Count")
# Bar plot for Age vs Shipping Type
age_shipping %>%
ggplot(aes(fill = Age, y = Count, x = Shipping_Type)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Shipping Type by Age", x = "Shipping Type", y = "Count")
# Chi-square test for Age and Shipping Type relationship
shipping_table_age <- table(df_2$Age, df_2$Shipping.Type)
chisq_result <- chisq.test(shipping_table_age)
# Post-hoc analysis (if applicable)
# Note: For post-hoc tests, you might need a specific library like `chisq.posthoc.test` or `DescTools`
# install.packages("DescTools")
# library(DescTools)
# chisq.posthoc.test(shipping_table_age)
# 1.6 Shipping Type by Age
age_shipping <- data.frame(table(df_2$Age.bin, df_2$Shipping.Type))
colnames(age_shipping) <- c("Age", "Shipping_Type", "Count")
# Bar plot for Age vs Shipping Type
age_shipping %>%
ggplot(aes(fill = Age.bin, y = Count, x = Shipping_Type)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Shipping Type by Age", x = "Shipping Type", y = "Count")
# 2.6 Shipping Type by Age
age_shipping <- data.frame(table(df_2$Age, df_2$Shipping.Type))
colnames(age_shipping) <- c("Age", "Shipping_Type", "Count")
# Bar plot for Age vs Shipping Type
age_shipping %>%
ggplot(aes(fill = Age, y = Count, x = Shipping_Type)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Shipping Type by Age", x = "Shipping Type", y = "Count")
# Chi-square test for Age and Shipping Type relationship
shipping_table_age <- table(df_2$Age, df_2$Shipping.Type)
chisq_result <- chisq.test(shipping_table_age)
# Post-hoc analysis (if applicable)
# Note: For post-hoc tests, you might need a specific library like `chisq.posthoc.test` or `DescTools`
# install.packages("DescTools")
# library(DescTools)
# chisq.posthoc.test(shipping_table_age)
# 1.6 Shipping Type by Age
age_shipping <- data.frame(table(df_2$Age.bin, df_2$Shipping.Type))
colnames(age_shipping) <- c("Age", "Shipping_Type", "Count")
# Bar plot for Age vs Shipping Type
age_shipping %>%
ggplot(aes(fill = Age.bin, y = Count, x = Shipping_Type)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Shipping Type by Age", x = "Shipping Type", y = "Count")
# 1.6 Shipping Type by Age
age_shipping <- data.frame(table(df_2$Age.bin, df_2$Shipping.Type))
colnames(age_shipping) <- c("Age", "Shipping_Type", "Count")
# Bar plot for Age vs Shipping Type
age_shipping %>%
ggplot(aes(fill = Age, y = Count, x = Shipping_Type)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Shipping Type by Age", x = "Shipping Type", y = "Count")
# Chi-square test for Age and Shipping Type relationship
shipping_table_age <- table(df_2$Age, df_2$Shipping.Type)
chisq_result <- chisq.test(shipping_table_age)
chisq.test(shipping_table_age)
chisq.posthoc.test(shipping_table_age)
names(df_2)
#| warning: false
#| results: false
library(tidyr)
library(dplyr)
# Load the dataset and preview the structure
dataset <- read.csv("ws09-exercise-football_weights.csv")
glimpse(dataset)
# Reshape data into long format
reshaped_data <- dataset %>% pivot_longer(cols = everything())
head(reshaped_data)
# Create a boxplot to visualize the distribution of values
boxplot(value ~ name, data = reshaped_data, cex.axis = 0.8)
# Perform ANOVA to analyze the variation
anova_results <- aov(value ~ name, data = reshaped_data)
summary(anova_results)
# Perform post-hoc analysis using Tukey's test
TukeyHSD(anova_results)
# 2.6 Shipping Type
gender_shipping <- data.frame(table(df_2$Gender, df_2$Shipping.Type))
colnames(gender_shipping) <- c("Gender","Shipping_Type","Count")
gender_shipping %>%
ggplot(aes(fill = Gender, y = Count, x = Shipping_Type)) +
geom_bar(position = "dodge", stat = "identity") +
# coord_flip()
shipping_table <- table(df_2$Gender,df_2$Shipping.Type)
# 2.6 Shipping Type
gender_shipping <- data.frame(table(df_2$Gender, df_2$Shipping.Type))
colnames(gender_shipping) <- c("Gender","Shipping_Type","Count")
gender_shipping %>%
ggplot(aes(fill = Gender, y = Count, x = Shipping_Type)) +
geom_bar(position = "dodge", stat = "identity") +
coord_flip()
shipping_table <- table(df_2$Gender,df_2$Shipping.Type)
chisq.test(shipping_table)
chisq.posthoc.test(shipping_table)
# Free shipping is preferred by Females more than males
